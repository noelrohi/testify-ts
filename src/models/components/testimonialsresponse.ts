/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Testimonial,
  Testimonial$inboundSchema,
  Testimonial$Outbound,
  Testimonial$outboundSchema,
} from "./testimonial.js";

export type TestimonialsResponse = {
  testimonials: Array<Testimonial>;
};

/** @internal */
export const TestimonialsResponse$inboundSchema: z.ZodType<
  TestimonialsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  testimonials: z.array(Testimonial$inboundSchema),
});

/** @internal */
export type TestimonialsResponse$Outbound = {
  testimonials: Array<Testimonial$Outbound>;
};

/** @internal */
export const TestimonialsResponse$outboundSchema: z.ZodType<
  TestimonialsResponse$Outbound,
  z.ZodTypeDef,
  TestimonialsResponse
> = z.object({
  testimonials: z.array(Testimonial$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TestimonialsResponse$ {
  /** @deprecated use `TestimonialsResponse$inboundSchema` instead. */
  export const inboundSchema = TestimonialsResponse$inboundSchema;
  /** @deprecated use `TestimonialsResponse$outboundSchema` instead. */
  export const outboundSchema = TestimonialsResponse$outboundSchema;
  /** @deprecated use `TestimonialsResponse$Outbound` instead. */
  export type Outbound = TestimonialsResponse$Outbound;
}

export function testimonialsResponseToJSON(
  testimonialsResponse: TestimonialsResponse,
): string {
  return JSON.stringify(
    TestimonialsResponse$outboundSchema.parse(testimonialsResponse),
  );
}

export function testimonialsResponseFromJSON(
  jsonString: string,
): SafeParseResult<TestimonialsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TestimonialsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TestimonialsResponse' from JSON`,
  );
}
